names(type.labs) <- c("rock", "seaweed", "water")
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Sample_type, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", y = "Relative abundance") +
theme_bw()+
scale_colour_discrete(name="OTU")+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
type.labs <- c("Rock", "Seaweed", "Water")
names(type.labs) <- c("rock", "seaweed", "water") # change text of facet labels
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Sample_type, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
type.labs <- c("Rock", "Seaweed", "Water")
names(type.labs) <- c("rock", "seaweed", "water") # change text of facet labels
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Sample_type, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", fill = "OTU",y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Site, scales = "free_x", space = "free") + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
seaweed_total_abundance = colSums(seaweed_otu)
N = 15
seaweed_top_N_abundance = names(sort(seaweed_total_abundance, decreasing = TRUE)[1:N])
seaweed_total_abundance = rowSums(seaweed_otu) # calculate total abundance
seaweed_metadata = cbind(seaweed_metadata, seaweed_total_abundance) # add total abundance as a new column
seaweed = as.data.frame(cbind(seaweed_metadata, seaweed_otu)) # update kelp_otu_metadata
seaweed_grouped_top_N = filter(seaweed_grouped, ASV %in% seaweed_top_N_abundance)
type.labs <- c("Golden Island", "Starfish Island", "Triquet Bay", "West Beach")
names(type.labs) <- c("Golden.Island", "Starfish.Island", "Triquet.Bay", "West.Beach")
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Site, scales = "free_x", space = "free") + # ignore blank spaces, make different regions have different widths
labs(x = "Sample",fill = "OTU", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
type.labs <- c("Golden Island", "Starfish Island", "Triquet Bay", "West Beach")
names(type.labs) <- c("Golden.Island", "Starfish.Island", "Triquet.Bay", "West.Beach")
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample",fill = "OTU", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
site.labs <- c("Golden Island", "Starfish Island", "Triquet Bay", "West Beach")
names(site.labs) <- c("Golden.Island", "Starfish.Island", "Triquet.Bay", "West.Beach")
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Sample_type = site.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample",fill = "OTU", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
site.labs <- c("Golden Island", "Starfish Island", "Triquet Bay", "West Beach")
names(site.labs) <- c("Golden.Island", "Starfish.Island", "Triquet.Bay", "West.Beach")
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum: "1.00" to the plot
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Site = site.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample",fill = "OTU", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
ggplot(seaweed_grouped, aes(x = X.SampleID, y = abundance, fill = ASV))+
geom_bar(stat = "identity", position = "fill", color = "white")+
facet_grid(~Site, scales = "free_x", space = "free") +
labs(x = "Sample", y = "Relative abundance") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
scale_y_continuous(expand=c(0,0))
site.labs <- c("Golden Island", "Starfish Island", "Triquet Bay", "West Beach")
names(site.labs) <- c("Golden.Island", "Starfish.Island", "Triquet.Bay", "West.Beach")
ggplot(seaweed_grouped, aes(x = X.SampleID, y = abundance, fill = ASV))+
geom_bar(stat = "identity", position = "fill", color = "white")+
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Site = site.labs)) +
labs(x = "Sample", y = "Relative abundance") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
scale_y_continuous(expand=c(0,0))
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+
expand_limits(y=c(0,1))+
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Site = site.labs)) +
labs(x = "Sample",fill = "OTU", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
View(kelp_grouped_top_N)
type.labs <- c("Seaweed", "Rock", "Water")
names(type.labs) <- c("seaweed", "rock", "water") # change text of facet labels
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum "1.00" to the plot
facet_grid(~Sample_type, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", fill = "OTU",y = "Relative abundance") + # change legend title and axes' name
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
type.labs <- c("Seaweed", "Rock", "Water")
names(type.labs) <- c("seaweed", "rock", "water") # change text of facet labels
kelp_grouped_top_N$sample_type_2 <- factor(kelp_grouped_top_N$Sample_type, levels=c("rock", "water", "seaweed"))
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum "1.00" to the plot
facet_grid(~Sample_type, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", fill = "OTU",y = "Relative abundance") + # change legend title and axes' name
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
type.labs <- c("Seaweed", "Rock", "Water")
names(type.labs) <- c("seaweed", "rock", "water") # change text of facet labels
kelp_grouped_top_N$sample_type_2 <- factor(kelp_grouped_top_N$Sample_type, levels=c("rock", "water", "seaweed"))
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum "1.00" to the plot
facet_grid(~sample_type_2, scales = "free_x", space = "free",
labeller = labeller(Sample_type = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", fill = "OTU",y = "Relative abundance") + # change legend title and axes' name
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
type.labs <- c("Seaweed", "Rock", "Water")
names(type.labs) <- c("seaweed", "rock", "water") # change text of facet labels
kelp_grouped_top_N$sample_type_2 <- factor(kelp_grouped_top_N$Sample_type, levels=c("rock", "water", "seaweed"))
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum "1.00" to the plot
facet_grid(~sample_type_2, scales = "free_x", space = "free",
labeller = labeller(sample_type_2 = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", fill = "OTU",y = "Relative abundance") + # change legend title and axes' name
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
## read dataset
# read kelp_otu
kelp_otu = read.table("Lemay_kelp_OTUtable.txt",
header = TRUE, sep = "\t",comment.char="&" ) # read OTU table
col_names_otu = kelp_otu$X.OTU.ID # store OTU.ID as future column names
kelp_otu = as.data.frame(kelp_otu[,-(1:2)]) # remove first 2 columns
kelp_otu = as.data.frame(t(kelp_otu[,-1])) # rotate columns and rows
names(kelp_otu) = col_names_otu # add OTU.ID as column names
kelp_otu <- cbind(X.SampleID = rownames(kelp_otu), data.frame(kelp_otu, row.names=NULL))
# add default row names, make samle ID as a column
# read kelp_metadata
kelp_metadata = read.table("Lemay_kelp_matadata.txt",
header = TRUE, sep = "\t", comment.char="&") # read metadata
kelp_metadata$X.SampleID = sub("-",".",kelp_metadata$X.SampleID) # replace "-" with "."
## store colors here
my_colors=c("#d13b00","#2e12bc","#a7b32f","#9d38e9","#256600","#ff69e2","#01be89","#ff2998",
"#655700","#0069d3","#f99128","#014d91","#ff3672","#ada0f4","#6c240b","#ff6ed2",
"#6e1c3b","#f488bf","#c50050","#6e4974")
################################## Before working ###########################################
################################## Start working ############################################
## Task 1)
# filter out samples that do not appear in both otu and metadata
kelp_otu_metadata = inner_join(kelp_metadata,kelp_otu,by="X.SampleID")
setwd("D:/BIOL448J_Lab/Lab04")
# load packages
library(tidyverse)
################################## Before working ###########################################
## read dataset
# read kelp_otu
kelp_otu = read.table("Lemay_kelp_OTUtable.txt",
header = TRUE, sep = "\t",comment.char="&" ) # read OTU table
col_names_otu = kelp_otu$X.OTU.ID # store OTU.ID as future column names
kelp_otu = as.data.frame(kelp_otu[,-(1:2)]) # remove first 2 columns
kelp_otu = as.data.frame(t(kelp_otu[,-1])) # rotate columns and rows
names(kelp_otu) = col_names_otu # add OTU.ID as column names
kelp_otu <- cbind(X.SampleID = rownames(kelp_otu), data.frame(kelp_otu, row.names=NULL))
# add default row names, make samle ID as a column
# read kelp_metadata
kelp_metadata = read.table("Lemay_kelp_matadata.txt",
header = TRUE, sep = "\t", comment.char="&") # read metadata
kelp_metadata$X.SampleID = sub("-",".",kelp_metadata$X.SampleID) # replace "-" with "."
## store colors here
my_colors=c("#d13b00","#2e12bc","#a7b32f","#9d38e9","#256600","#ff69e2","#01be89","#ff2998",
"#655700","#0069d3","#f99128","#014d91","#ff3672","#ada0f4","#6c240b","#ff6ed2",
"#6e1c3b","#f488bf","#c50050","#6e4974")
################################## Before working ###########################################
################################## Start working ############################################
## Task 1)
# filter out samples that do not appear in both otu and metadata
kelp_otu_metadata = inner_join(kelp_metadata,kelp_otu,by="X.SampleID")
View(kelp_metadata)
View(kelp_otu)
View(kelp_otu_metadata)
anti_join(kelp_metadata, kelp_otu, by = c("X.SampleID")) %>%
DT::datatable(rownames = FALSE)
anti_join(kelp_metadata, kelp_otu, by = c("X.SampleID"))
anti_join(kelp_otu, kelp_metadata, by = c("X.SampleID"))
anti_join(kelp_otu, kelp_metadata, by = c("X.SampleID")) %>%
DT::datatable()
anti_join(kelp_otu, kelp_metadata, by = c("X.SampleID"))
anti_join(kelp_metadata, kelp_otu, by = c("X.SampleID")) %>%
DT::datatable()
View(kelp_metadata)
# Qi Yang
# This file is done by following instructions of Guide: Class meeting 11
# loading packages
library(tidyverse)
library(gapminder)
# filter data from 2007 in Asia and save to a variable
gap_asia_2007 <- gapminder %>%
filter(year == 2007, continent == "Asia")
gap_asia_2007
library(here)
write_csv(gap_asia_2007,here::here("CM11", "data","cm011_data","exported_file.csv"))
# import the data just saved to R
read_csv(here::here("CM11", "data","cm011_data","exported_file.csv"))
url <- "http://gattonweb.uky.edu/sheather/book/docs/datasets/magazines.csv"
read_csv(url)
library(readxl)
xls_url <- "http://gattonweb.uky.edu/sheather/book/docs/datasets/GreatestGivers.xls"
download.file(xls_url,here::here("CM11", "data","cm011_data","some_file.xls"))
xls_url <- "http://gattonweb.uky.edu/sheather/book/docs/datasets/GreatestGivers.xls"
file_name <- basename(xls_url)
download.file(xls_url,here::here("data","cm011_data",file_name))
download.file(xls_url,here::here("CM11", "data","cm011_data",file_name))
read_excel(file_name)
mri_file = here::here("CM11", "data","cm011_data","Firas-MRI.xlsx")
mri <- read_excel(mri_file, range = "A1:K12")
view(mri)
mri <- read_excel(mri_file, range = "A1:L12")
view(mri)
mri_file = here::here("CM11", "data","cm011_data","Firas-MRI.xlsx")
mri <- read_excel(mri_file, range = "A1:L12")
view(mri)
mri <- mri[,-10]
mri <- mri %>%
pivot_longer(cols = `Slice 1`:`Slice 8`,
names_to = "slice_no",
values_to = "values")
mri
View(mri)
setwd("D:/BIOL448J_Lab/Lab04")
#read Lemay kelp metadata
lemay_metadata = read.table("Lemay_kelp_matadata.txt", header=TRUE,sep="\t")
#read Lemay kelp otu data
lemay_otu = read.table("Lemay_kelp_OTUtable.txt",header=TRUE,sep="\t")
#get rid of the taxonomy column (2nd)
lemay_otu = as.data.frame(lemay_otu[,-2])
#tranpose them
lemay_otu = as.data.frame(t(lemay_otu))
lemay_otu=data.matrix(lemay_otu)
colnames(lemay_otu)=lemay_otu[1,]  #name of first row to column
lemay_otu=as.data.frame(lemay_otu[-1,]) #deletes 1st row
names(lemay_otu)[0]=paste("SampleID")
lemay_otu <- cbind(rownames(lemay_otu), lemay_otu)
rownames(lemay_otu) <- NULL
colnames(lemay_otu)[1] <- "SampleID"
#give Sample ID column the same format
lemay_metadata$SampleID = sub("-",".",lemay_metadata$SampleID)
otu.metadata_merged = inner_join(lemay_otu,lemay_metadata,by="SampleID")
#give Sample ID column the same format
lemay_metadata$SampleID = sub("-",".",lemay_metadata$SampleID)
View(lemay_metadata)
View(lemay_otu)
View(lemay_metadata)
#read Lemay kelp metadata
lemay_metadata = read.table("Lemay_kelp_matadata(1).txt", header=TRUE,sep="\t")
#read Lemay kelp otu data
lemay_otu = read.table("Lemay_kelp_OTUtable(1).txt",header=TRUE,sep="\t")
View(lemay_metadata)
View(lemay_otu)
View(lemay_metadata)
View(lemay_otu)
#get rid of the taxonomy column (2nd)
lemay_otu = as.data.frame(lemay_otu[,-2])
#tranpose them
lemay_otu = as.data.frame(t(lemay_otu))
lemay_otu=data.matrix(lemay_otu)
colnames(lemay_otu)=lemay_otu[1,]  #name of first row to column
lemay_otu=as.data.frame(lemay_otu[-1,]) #deletes 1st row
names(lemay_otu)[0]=paste("SampleID")
lemay_otu <- cbind(rownames(lemay_otu), lemay_otu)
rownames(lemay_otu) <- NULL
colnames(lemay_otu)[1] <- "SampleID"
#give Sample ID column the same format
lemay_metadata$SampleID = sub("-",".",lemay_metadata$SampleID)
View(lemay_otu)
View(lemay_metadata)
# read kelp_otu
kelp_otu = read.table("Lemay_kelp_OTUtable.txt",
header = TRUE, sep = "\t",comment.char="&" ) # read OTU table
col_names_otu = kelp_otu$X.OTU.ID # store OTU.ID as future column names
kelp_otu = as.data.frame(kelp_otu[,-(1:2)]) # remove first 2 columns
kelp_otu = as.data.frame(t(kelp_otu[,-1])) # rotate columns and rows
names(kelp_otu) = col_names_otu # add OTU.ID as column names
kelp_otu <- cbind(X.SampleID = rownames(kelp_otu), data.frame(kelp_otu, row.names=NULL))
# add default row names, make samle ID as a column
View(kelp_otu)
kelp_metadata = read.table("Lemay_kelp_matadata.txt",
header = TRUE, sep = "\t", comment.char="&") # read metadata
kelp_metadata$X.SampleID = sub("-",".",kelp_metadata$X.SampleID) # replace "-" with "."
View(kelp_metadata)
kelp_metadata = read.table("Lemay_kelp_matadata.txt",
header = TRUE, sep = "\t", comment.char="&")
View(kelp_metadata)
kelp_otu = read.table("Lemay_kelp_OTUtable.txt",
header = TRUE, sep = "\t",comment.char="&" )
View(kelp_otu)
kelp_otu = as.data.frame(kelp_otu[,-2])
View(kelp_otu)
col_names_otu = kelp_otu$X.OTU.ID # store OTU.ID as future column names
kelp_otu = as.data.frame(kelp_otu[,-1]) # remove first 2 columns
kelp_otu = read.table("Lemay_kelp_OTUtable.txt",
header = TRUE, sep = "\t",comment.char="&" ) # read OTU table
kelp_otu = as.data.frame(kelp_otu[,-2]) # remove taxonomy
col_names_otu = kelp_otu$X.OTU.ID # store OTU.ID as future column names
kelp_otu = as.data.frame(t(kelp_otu[,-1])) # rotate columns and rows
names(kelp_otu) = col_names_otu # add OTU.ID as column names
kelp_otu <- cbind(X.SampleID = rownames(kelp_otu), data.frame(kelp_otu, row.names=NULL))
View(kelp_otu)
library(tidyverse)
otu.metadata_merged = inner_join(lemay_otu,lemay_metadata,by="SampleID")
View(otu.metadata_merged)
# read kelp_otu
kelp_otu = read.table("Lemay_kelp_OTUtable.txt",
header = TRUE, sep = "\t",comment.char="&" ) # read OTU table
kelp_otu = as.data.frame(kelp_otu[,-2]) # remove taxonomy
col_names_otu = kelp_otu$X.OTU.ID # store OTU.ID as future column names
kelp_otu = as.data.frame(t(kelp_otu[,-1])) # rotate columns and rows
names(kelp_otu) = col_names_otu # add OTU.ID as column names
kelp_otu <- cbind(X.SampleID = rownames(kelp_otu), data.frame(kelp_otu, row.names=NULL))
# add default row names, make samle ID as a column
View(kelp_otu)
kelp_metadata = read.table("Lemay_kelp_matadata.txt",
header = TRUE, sep = "\t", comment.char="&") # read metadata
kelp_metadata$X.SampleID = sub("-",".",kelp_metadata$X.SampleID) # replace "-" with "."
my_colors=c("#d13b00","#2e12bc","#a7b32f","#9d38e9","#256600","#ff69e2","#01be89","#ff2998",
"#655700","#0069d3","#f99128","#014d91","#ff3672","#ada0f4","#6c240b","#ff6ed2",
"#6e1c3b","#f488bf","#c50050","#6e4974")
# filter out samples that do not appear in both otu and metadata
kelp_otu_metadata = inner_join(kelp_metadata,kelp_otu,by="X.SampleID")
View(kelp_otu_metadata)
kelp_metadata = kelp_otu_metadata[,1:20] # metadata
kelp_otu = kelp_otu_metadata[,-(1:20)] # otu table
View(kelp_metadata)
View(kelp_otu)
total_richness = rowSums(kelp_otu > 0) # calculate total richness
kelp_metadata = cbind(kelp_metadata,total_richness)
View(kelp_metadata)
# put the new metadata and otu back together
kelp_otu_metadata = as.data.frame(cbind(kelp_metadata,kelp_otu))
# get 20 most OTU rich samples
kelp_top20 = sort(total_richness, decreasing = TRUE)[1:20]
kelp_top20
# after running `kelp_top20` I found the most richness is 1248, and the 20th most richness is 714
kelp_otu_metadata$X.SampleID[which(total_richness == 1248)]
kelp_otu_metadata$X.SampleID[which(total_richness == 714)]
## Task 3)
# filter out samples with reads < 10000
kelp_more_reads = filter(kelp_otu_metadata, reads > 10000)
## Task 4)
# new dataframe for seaweed (still reads < 10000)
seaweed = filter(kelp_more_reads, Sample_type == "seaweed")
seaweed_metadata = seaweed[,(1:21)] # seaweed metadata
seaweed_otu = seaweed[,-(1:21)] # seaweed otu
View(seaweed_metadata)
View(seaweed_otu)
# gather OTU names and abundances
seaweed_grouped = gather(seaweed, key = "ASV", value = "abundance", -(1:21))
# get abundance for each OTU in all samples
seaweed_total_abundance = colSums(seaweed_otu)
N = 15
seaweed_top_N_abundance = names(sort(seaweed_total_abundance, decreasing = TRUE)[1:N]) # top N abundance's name
# get abundance of all OTUs in each sample
seaweed_total_abundance = rowSums(seaweed_otu) # calculate total abundance
seaweed_metadata = cbind(seaweed_metadata, seaweed_total_abundance) # add total abundance as a new column
seaweed = as.data.frame(cbind(seaweed_metadata, seaweed_otu)) # update kelp_otu_metadata
seaweed_grouped_top_N = filter(seaweed_grouped, ASV %in% seaweed_top_N_abundance) # keep rows only where ASV is top N abundance
site.labs <- c("Golden Island", "Starfish Island", "Triquet Bay", "West Beach")
names(site.labs) <- c("Golden.Island", "Starfish.Island", "Triquet.Bay", "West.Beach")
ggplot(seaweed_grouped, aes(x = X.SampleID, y = abundance, fill = ASV))+
geom_bar(stat = "identity", position = "fill", color = "white")+
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Site = site.labs)) +
labs(x = "Sample", y = "Relative abundance") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
scale_y_continuous(expand=c(0,0))
View(kelp_more_reads)
ggplot(seaweed_grouped_top_N, aes(x = X.SampleID, y = abundance/seaweed_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+
expand_limits(y=c(0,1))+
facet_grid(~Site, scales = "free_x", space = "free",
labeller = labeller(Site = site.labs)) +
labs(x = "Sample",fill = "OTU", y = "Relative abundance") +
theme_bw()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
## Task 5)
# gather OTU names and abundances
kelp_grouped = gather(kelp_otu_metadata, key = "ASV", value = "abundance", -(1:21))
View(kelp_grouped)
# get abundance for each OTU in all samples
kelp_total_abundance = colSums(kelp_otu)
kelp_top_N_abundance = names(sort(kelp_total_abundance, decreasing = TRUE)[1:N]) # top N abundance's name
# get abundance of all OTUs in each sample
kelp_total_abundance = rowSums(kelp_otu) # calculate total abundance
kelp_metadata = cbind(kelp_metadata,kelp_total_abundance) # add total abundance as a new column
kelp = as.data.frame(cbind(kelp_metadata,kelp_otu)) # update kelp_otu_metadata
kelp_grouped_top_N = filter(kelp_grouped, ASV %in% kelp_top_N_abundance) # keep rows only where ASV is top N abundance
# plot: top N OTUs in different sample types
type.labs <- c("Seaweed", "Rock", "Water")
names(type.labs) <- c("seaweed", "rock", "water") # change text of facet labels
kelp_grouped_top_N$sample_type_2 <- factor(kelp_grouped_top_N$Sample_type, levels=c("rock", "water", "seaweed"))
ggplot(kelp_grouped_top_N, aes(x = X.SampleID, y = abundance/kelp_total_abundance, fill = ASV))+
geom_bar(stat = "identity", position = "stack", color = "white")+ # stack shows different height, fill makes the same
expand_limits(y=c(0,1))+ # add y scale maximum "1.00" to the plot
facet_grid(~sample_type_2, scales = "free_x", space = "free",
labeller = labeller(sample_type_2 = type.labs)) + # ignore blank spaces, make different regions have different widths
labs(x = "Sample", fill = "OTU",y = "Relative abundance") + # change legend title and axes' name
theme_bw()+
theme(axis.text.x = element_blank(), # hide x axis names
axis.ticks.x = element_blank()) + # hide x axis ticks
scale_fill_manual(values = my_colors)+
scale_y_continuous(expand=c(0,0))
setwd("D:/BIOL448J_Lab/Lab04")
#read Lemay kelp metadata
lemay_metadata = read.table("Lemay_kelp_matadata(1).txt", header=TRUE,sep="\t")
#read Lemay kelp otu data
lemay_otu = read.table("Lemay_kelp_OTUtable(1).txt",header=TRUE,sep="\t")
#read Lemay kelp metadata
lemay_metadata = read.table("Lemay_kelp_matadata(1).txt", header=TRUE,sep="\t")
#read Lemay kelp otu data
lemay_otu = read.table("Lemay_kelp_OTUtable(1).txt",header=TRUE,sep="\t")
#get rid of the taxonomy column (2nd)
lemay_otu = as.data.frame(lemay_otu[,-2])
#tranpose them
lemay_otu = as.data.frame(t(lemay_otu))
lemay_otu=data.matrix(lemay_otu)
colnames(lemay_otu)=lemay_otu[1,]  #name of first row to column
lemay_otu=as.data.frame(lemay_otu[-1,]) #deletes 1st row
names(lemay_otu)[0]=paste("SampleID")
lemay_otu <- cbind(rownames(lemay_otu), lemay_otu)
rownames(lemay_otu) <- NULL
colnames(lemay_otu)[1] <- "SampleID"
#give Sample ID column the same format
lemay_metadata$SampleID = sub("-",".",lemay_metadata$SampleID)
otu.metadata_merged = inner_join(lemay_otu,lemay_metadata,by="SampleID")
library(tidyverse)
otu.metadata_merged = inner_join(lemay_otu,lemay_metadata,by="SampleID")
View(otu.metadata_merged)
otu.metadata_merged = inner_join(lemay_metadata,lemay_otu,by="SampleID")
View(otu.metadata_merged)
